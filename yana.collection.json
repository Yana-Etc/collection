{
	"info": {
		"_postman_id": "423e3119-f8a9-4bca-b07a-da536d729e6e",
		"name": "habra",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Api lessons",
			"item": [
				{
					"name": "Trello",
					"item": [
						{
							"name": "Create board",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Board should be created\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"my new board\");",
											"    pm.expect(jsonData.closed).to.eql(false);",
											"});",
											"pm.test(\"Board should be private\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");",
											"});",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.pinned) . to.eql(false);",
											"});",
											"pm.test(\"HideVotes\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.prefs.hideVotes).to.eql(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.trello.com/1/boards/?name=my new board&key=bb1655b7adf98c13fd831cea406987d0&token=c6e5030bbe974ff306e779e563297473471fa7ac09f7e5c8c243bd49b9e5730b&defaultLists=false",
									"protocol": "https",
									"host": [
										"api",
										"trello",
										"com"
									],
									"path": [
										"1",
										"boards",
										""
									],
									"query": [
										{
											"key": "name",
											"value": "my new board"
										},
										{
											"key": "key",
											"value": "bb1655b7adf98c13fd831cea406987d0"
										},
										{
											"key": "token",
											"value": "c6e5030bbe974ff306e779e563297473471fa7ac09f7e5c8c243bd49b9e5730b"
										},
										{
											"key": "defaultLists",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "create list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Name of the list ToDo\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql (\"ToDO\");",
											"});",
											"",
											"pm.test(\"Should not be closed\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.closed).to.eql(false);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.trello.com/1/lists?name=ToDO&idBoard=5f0821e8ecc51182fc7709cb&key={{trelloKey}}&token={{trelloToken}}",
									"protocol": "https",
									"host": [
										"api",
										"trello",
										"com"
									],
									"path": [
										"1",
										"lists"
									],
									"query": [
										{
											"key": "name",
											"value": "ToDO"
										},
										{
											"key": "idBoard",
											"value": "5f0821e8ecc51182fc7709cb"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": "{{trelloToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Done",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Name is Done\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"Done\");",
											"});",
											"",
											"pm.test(\"Should not be closed\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.closed).to.eql(false);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.trello.com/1/lists?name=Done&idBoard=5f0821e8ecc51182fc7709cb&key={{trelloKey}}&token={{trelloToken}}",
									"protocol": "https",
									"host": [
										"api",
										"trello",
										"com"
									],
									"path": [
										"1",
										"lists"
									],
									"query": [
										{
											"key": "name",
											"value": "Done"
										},
										{
											"key": "idBoard",
											"value": "5f0821e8ecc51182fc7709cb"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": "{{trelloToken}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "apy NY",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.nytimes.com/svc/books/v3/lists.json?api-key=z5LUFrxxrtLZu3XiTTH89zke3k92Rw2W&list=hardcover-nonfiction&rank=1&published-date=2020-07-12&rank-last-week=0",
							"protocol": "https",
							"host": [
								"api",
								"nytimes",
								"com"
							],
							"path": [
								"svc",
								"books",
								"v3",
								"lists.json"
							],
							"query": [
								{
									"key": "api-key",
									"value": "z5LUFrxxrtLZu3XiTTH89zke3k92Rw2W"
								},
								{
									"key": "list",
									"value": "hardcover-nonfiction"
								},
								{
									"key": "rank",
									"value": "1"
								},
								{
									"key": "published-date",
									"value": "2020-07-12"
								},
								{
									"key": "rank-last-week",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\" : \"Yanina\",\n    \"email\" : \"yanimuse92@gmail.com\",\n    \"id\" : \"{{uuid}}_\"\n\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://httpbin.org/post",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test ( assertion in nested object)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"",
							"let commentsStatus = jsonData.prefs.comments.status;",
							"console.log(commentsStatus);",
							"",
							"pm.test ( \"comments should be disabled\" ,function(){",
							"pm.expect (commentsStatus).to.eql(\"disabled\");",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://www.mocky.io/v2/5ab34d8c2f00006600ca3652",
					"protocol": "http",
					"host": [
						"www",
						"mocky",
						"io"
					],
					"path": [
						"v2",
						"5ab34d8c2f00006600ca3652"
					]
				}
			},
			"response": []
		}
	]
}